// <auto-generated />
using System;
using EmpleosWebMax.Infrastructure.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmpleosWebMax.Infrastructure.Core.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210423044858_ModuleSequence")]
    partial class ModuleSequence
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EmpleosWebMax.Domain.Entity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Sexo")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StatusGeneral")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("TypeAdd")
                        .HasColumnType("int");

                    b.Property<int>("TypeUser")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("EmpleosWebMax.Domain.Entity.Docs", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DocName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocNameTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("UserDocs");
                });

            modelBuilder.Entity("EmpleosWebMax.Domain.Entity.Educacion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Institucion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstitucionLugar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateadd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("desde")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("hasta")
                        .HasColumnType("datetime2");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<int>("tipoestudio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("educacion");
                });

            modelBuilder.Entity("EmpleosWebMax.Domain.Entity.Empleo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Areaprofesional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudadtrabajo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripciontrabajo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Idempresa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Idnumempresa")
                        .HasColumnType("bigint");

                    b.Property<Guid>("Job")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Requisitostrabajo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salario")
                        .HasColumnType("float");

                    b.Property<double>("Salariohasta")
                        .HasColumnType("float");

                    b.Property<bool>("Salariotratar")
                        .HasColumnType("bit");

                    b.Property<int>("TipoContrato")
                        .HasColumnType("int");

                    b.Property<string>("Titulotrabajo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateadd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("desde")
                        .HasColumnType("datetime2");

                    b.Property<string>("diaslaborables")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("edadmaxima")
                        .HasColumnType("int");

                    b.Property<int>("edadminima")
                        .HasColumnType("int");

                    b.Property<DateTime>("hasta")
                        .HasColumnType("datetime2");

                    b.Property<string>("idiomas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("jornadahrs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("publicosino")
                        .HasColumnType("bit");

                    b.Property<string>("salarioaspiraMON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("salarioultimoMON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sexo")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<int>("statusGral")
                        .HasColumnType("int");

                    b.Property<Guid>("statusGralBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("statusGralDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("statusGralMail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("empleo");
                });

            modelBuilder.Entity("EmpleosWebMax.Domain.Entity.EmpleoAdd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailCandidato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdJob")
                        .HasColumnType("bigint");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUserEmpresa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Job")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TituloEmpleo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tracking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TrackingAdd")
                        .HasColumnType("datetime2");

                    b.Property<int>("TypeAddEmpresa")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateadd")
                        .HasColumnType("datetime2");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<int>("statusSenMail")
                        .HasColumnType("int");

                    b.Property<Guid>("vistapor")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("empleoAdds");
                });

            modelBuilder.Entity("EmpleosWebMax.Domain.Entity.EmpleoAddTracking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("From_")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("IdEmppleoAdd")
                        .HasColumnType("bigint");

                    b.Property<long>("IdReferencia")
                        .HasColumnType("bigint");

                    b.Property<Guid>("IdUserCandidato")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUserEmpresa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Job")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Msg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusTracking")
                        .HasColumnType("int");

                    b.Property<Guid>("To_")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tracking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TrackingAdd")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tracking_title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Vistopor")
                        .HasColumnType("bigint");

                    b.Property<string>("elCandidato")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("empleoAddTrackings");
                });

            modelBuilder.Entity("EmpleosWebMax.Domain.Entity.Empresaperfil", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpresaCentro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Idempresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RNC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateadd")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("empresaperfils");
                });

            modelBuilder.Entity("EmpleosWebMax.Domain.Entity.Experiencias", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aportes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Empresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuncionesRol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Posicion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateadd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("desde")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("hasta")
                        .HasColumnType("datetime2");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("experiencias");
                });

            modelBuilder.Entity("EmpleosWebMax.Domain.Entity.Follow", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("IdUserEmpresa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUserPrincipal")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MailEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailPrincipal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeUserEmpresa")
                        .HasColumnType("int");

                    b.Property<int>("TypeUserPrincipal")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<int>("seguidor")
                        .HasColumnType("int");

                    b.Property<int>("seguidorStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("seguidorStatusFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("solicitudEnviada")
                        .HasColumnType("int");

                    b.Property<int>("solicitudRecibida")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("follows");
                });

            modelBuilder.Entity("EmpleosWebMax.Domain.Entity.Foro", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Autor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contenido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("IdCategoria")
                        .HasColumnType("smallint");

                    b.Property<Guid>("IdForo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Publicado")
                        .HasColumnType("datetime2");

                    b.Property<short>("StatusForo")
                        .HasColumnType("smallint");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Foros");
                });

            modelBuilder.Entity("EmpleosWebMax.Domain.Entity.ForoCategorias", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("StatusForoCategoria")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("foroCategorias");
                });

            modelBuilder.Entity("EmpleosWebMax.Domain.Entity.ForoLike", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdForo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("IdPost")
                        .HasColumnType("bigint");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Like")
                        .HasColumnType("smallint");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("ForoLikes");
                });

            modelBuilder.Entity("EmpleosWebMax.Domain.Entity.ForoMsg", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("IdForo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("IdForoInt")
                        .HasColumnType("bigint");

                    b.Property<Guid>("IdUserPlataforma")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mensaje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublicadoMsg")
                        .HasColumnType("datetime2");

                    b.Property<short>("StatusForoAdmin")
                        .HasColumnType("smallint");

                    b.Property<short>("StatusForoUser")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Foromensajes");
                });

            modelBuilder.Entity("EmpleosWebMax.Domain.Entity.Friends", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("IdUserGuest")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUserPrincipal")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MailGuest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailPrincipal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nameinvitado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeUserGuest")
                        .HasColumnType("int");

                    b.Property<int>("TypeUserPrincipal")
                        .HasColumnType("int");

                    b.Property<int>("amigo")
                        .HasColumnType("int");

                    b.Property<int>("amigoStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("amigoStatusFecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<string>("mensaje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("seguidor")
                        .HasColumnType("int");

                    b.Property<int>("seguidorStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("seguidorStatusFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("solicitudEnviada")
                        .HasColumnType("int");

                    b.Property<int>("solicitudRecibida")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("friendsall");
                });

            modelBuilder.Entity("EmpleosWebMax.Domain.Entity.Miscelaneos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Moneda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("miscelaneos");
                });

            modelBuilder.Entity("EmpleosWebMax.Domain.Entity.ModuleSequence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Module")
                        .HasColumnType("int");

                    b.Property<string>("ModuleString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ModuleSequences");
                });

            modelBuilder.Entity("EmpleosWebMax.Domain.Entity.Plan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CanditateMessageNumber")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCanditateSearch")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefaultPlan")
                        .HasColumnType("bit");

                    b.Property<int>("JobVacancyNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PriceOfJobVacancyBonus")
                        .HasColumnType("int");

                    b.Property<int>("PriorityJobNumber")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("EmpleosWebMax.Domain.Entity.Referencias", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Empresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Parentezco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Persona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateadd")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("referencias");
                });

            modelBuilder.Entity("EmpleosWebMax.Domain.Entity.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("EmpleosWebMax.Domain.Entity.Ticket", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaTicket")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("From_")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mensaje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("StatusTicket")
                        .HasColumnType("smallint");

                    b.Property<string>("TicketNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("To_")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("EmpleosWebMax.Domain.Entity.TicketResponse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaResponse")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("From_")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Respuesta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("StatusResponse")
                        .HasColumnType("smallint");

                    b.Property<string>("TicketNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("To_")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TicketResponses");
                });

            modelBuilder.Entity("EmpleosWebMax.Domain.Entity.UserInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Areaprofesional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CVconfidencial")
                        .HasColumnType("bit");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentoIDn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentoIDt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estadocivil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estadolaboral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Idioma1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Idioma1nivel")
                        .HasColumnType("int");

                    b.Property<string>("Idioma2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Idioma2nivel")
                        .HasColumnType("int");

                    b.Property<string>("Idioma3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Idioma3nivel")
                        .HasColumnType("int");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nacionalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salarioaspira")
                        .HasColumnType("float");

                    b.Property<string>("Telefono1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Twitter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Ultimosalario")
                        .HasColumnType("float");

                    b.Property<DateTime>("dateadd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("salarioaspiraMON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("salarioultimoMON")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("userInfos");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("EmpleosWebMax.Domain.Entity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("EmpleosWebMax.Domain.Entity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpleosWebMax.Domain.Entity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("EmpleosWebMax.Domain.Entity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
